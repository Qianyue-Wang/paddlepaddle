#使用PaddleOCR提取扫描文本内容
#使用PaddleNLP抽取自定义信息
#使用PaddleOCR+PaddleNLP快速提取文本内容，经过少量数据微调即可准确抽取关键信息
from paddleocr import PaddleOCR, draw_ocr
img_path="test_hetong.jpg"
ocr = PaddleOCR(use_angle_cls=False, lang="ch")
# 预测结果
import cv2
import numpy as np
import matplotlib.pyplot as plt

#读入图像,三通道
image=cv2.imread("test_hetong.jpg",cv2.IMREAD_COLOR) #timg.jpeg

#获得三个通道
Bch,Gch,Rch=cv2.split(image)

#保存三通道图片
cv2.imwrite('blue_channel.jpg',Bch)
cv2.imwrite('green_channel.jpg',Gch)
cv2.imwrite('red_channel.jpg',Rch)

import numpy as np
import cv2


img_path = './red_channel.jpg'
result = ocr.ocr(img_path, cls=False)

# 可视化结果
from PIL import Image

image = Image.open(img_path).convert('RGB')
boxes = [line[0] for line in result]
txts = [line[1][0] for line in result]
scores = [line[1][1] for line in result]
im_show = draw_ocr(image, boxes, txts, scores, font_path='./simfang.ttf')
im_show = Image.fromarray(im_show)
vis = np.array(im_show)
im_show.show()



txts = [line[1][0] for line in result]
all_context = "\n".join(txts)
print(all_context)

from paddlenlp import Taskflow
schema = ["甲方","乙方"]
ie = Taskflow('information_extraction', schema=schema)
ie.set_schema(schema)
print(ie(all_context))
